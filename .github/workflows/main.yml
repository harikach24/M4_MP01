# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        pip install -r bikeshare_project/requirements/test_requirements.txt
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Train the Model
      run: |
        python bikeshare_project/bikeshare_model/train_pipeline.py
    - name: Test with pytest
      run: |
        pytest
    - name: Package the build
      working-directory: bikeshare_project
      run: |
        python -m build
    - name: Copy wheel file from dist to bikeshare_model_api folder
      run: |
        cp bikeshare_project/dist/*.whl bikeshare_project/bikeshare_model_api/.
    - name: Build Docker Image
      env:
        DOCKER_USER: ${{secrets.DOCKER_USER_NAME}}
      run: |
        docker build -t $DOCKER_USER/bikeshare_api bikeshare_project/bikeshare_model_api/
    - name: Login to DockerHub
      env:
        DOCKER_USER: ${{secrets.DOCKER_USER_NAME}}
        DOCKER_PASSWORD: ${{secrets.DOCKER_PASS_TOKEN}}
      run:
        docker login -u $DOCKER_USER -p $DOCKER_PASSWORD    
    - name: Push Docker Image
      env:
        DOCKER_USER: ${{secrets.DOCKER_USER_NAME}}
      run: |
        docker push $DOCKER_USER/bikeshare_api
# name: Push a Docker Image
# on:
#   push:
#     branches:
#       - main
#   workflow_dispatch:
  
# jobs:
#   train:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v3
#     - name: Set up Python 3.10
#       uses: actions/setup-python@v3
#       with:
#         python-version: '3.10'
#     - name: Install dependencies
#       run: pip install -r bikeshare_project/requirements/requirements.txt
#     - name: Train and save pipeline
#       run: python bikeshare_project/bikeshare_model/train_pipeline.py
#     - uses: actions/upload-artifact@v2
#       with:
#         name: my-trained-pipeline
#         path: bikeshare_project/bikeshare_model/trained_models/*.pkl
#         retention-days: 1
        
#   test:
#       needs: train
#       runs-on: ubuntu-latest
#       steps:
#       - uses: actions/checkout@v3
#       - name: Set up Python 3.10
#         uses: actions/setup-python@v3
#         with:
#           python-version: '3.10'
#       - uses: actions/download-artifact@v2
#         with:
#           name: my-trained-pipeline
#           path: bikeshare_project/bikeshare_model/trained_models
#       - name: Install dependencies
#         run: pip install -r bikeshare_project/requirements/test_requirements.txt
#       - name: Test with pytest
#         run: pytest

    
#   build:
#       needs: [train, test]
#       runs-on: ubuntu-latest
#       steps:
#       - uses: actions/checkout@v3
#       - name: Set up Python 3.10
#         uses: actions/setup-python@v3
#         with:
#           python-version: '3.10'
#       - uses: actions/download-artifact@v2
#         with:
#           name: my-trained-pipeline
#           path: bikeshare_project/bikeshare_model/trained_models
#       - name: Install dependencies
#         run: pip install --upgrade build
#       - name: Build package
#         run: python -m build
#       - uses: actions/upload-artifact@v2
#         with:
#           name: my-build-package
#           path: dist/*.whl
#           retention-days: 1
      
#   push-image:
#       needs: [train, test, build]
#       runs-on: ubuntu-latest
#       steps:
#       - name: Repo Checkout
#         uses: actions/checkout@v2
      
#       - uses: actions/download-artifact@v2
#         with:
#           name: my-build-package
#           path: bikeshare_model_api
        
#       - name: Login to Docker hub
#         env:
#           DOCKER_USER: ${{ secrets.DOCKER_USER_NAME }}
#           DOCKER_PASSWORD: ${{ secrets.DOCKER_PASS_TOKEN }}
#         run: docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
        
#       - name: Build the Docker image for Fastapi app
#         env:
#           DOCKER_USER: ${{ secrets.DOCKER_USER_NAME }}
#         run: docker build . -f Dockerfile -t $DOCKER_USER/bikeshare-fastapi:latest
      
#       - name: Push the Docker Image
#         env:
#           DOCKER_USER: ${{ secrets.DOCKER_USER_NAME }}
#         run: docker push $DOCKER_USER/bikeshare-fastapi
  
#       - name: Logout to Docker hub
#         run: docker logout
